MODULE main 
 VAR -- The outputs
	constantA_output : array 0..1 of array 0..1 of unsigned word[8]; --matrix A 
	constantB_output : array 0..1 of unsigned word[8]; --matrix B
	constantK_output : array 0..1 of unsigned word[8]; --matrix K
	product1_output : array 0..1 of unsigned word[8];	-- vector Ax
	product2_output : array 0..1 of unsigned word[8];	-- vector BKx
	product3_output : unsigned word[8];	-- vector Kx
	subtract_output : array 0..1 of unsigned word[8];	-- vector x at t+1
	delay_output : array 0..1 of unsigned word[8];		-- vector x at t
	lyap_output : unsigned word[8];				-- Lyap function
	delay_lyap_output : unsigned word[8];			-- Lyap delay
     -- The blocks instantiated by inputs (outputs of other blocks or constants)
	block_constant_A : b_constant_matrix_A;
	block_constant_B : b_constant_matrix_B;
	block_constant_K : b_constant_matrix_K;
	block_product1 : b_productMV(constantA_output,delay_output);
	block_product2 : b_productVN(constantB_output,product3_output);
	block_product3 : b_productVV(constantK_output,delay_output);
	block_subtract : b_subtract(product1_output,product2_output);
	block_delay : b_delay(subtract_output);
	block_lyap : b_lyap(delay_output);
	block_delay_lyap : b_delay2(lyap_output);

 ASSIGN
	init(constantA_output[0][0]) := block_constant_A.outputm1[0][0];
	init(constantA_output[0][1]) := block_constant_A.outputm1[0][1];
	init(constantA_output[1][0]) := block_constant_A.outputm1[1][0];
	init(constantA_output[1][1]) := block_constant_A.outputm1[1][1];
	init(constantB_output[0]) := block_constant_B.outputm1[0];
	init(constantB_output[1]) := block_constant_B.outputm1[1];
	init(constantK_output[0]) := block_constant_K.outputm1[0];
	init(constantK_output[1]) := block_constant_K.outputm1[1];
   	init(product1_output[0]) := block_product1.outputm1[0];
   	init(product1_output[1]) := block_product1.outputm1[1];
   	init(product2_output[0]) := block_product2.outputm1[0];
   	init(product2_output[1]) := block_product2.outputm1[1];
   	init(product3_output) := block_product3.outputm1;
   	init(subtract_output[0]) := block_subtract.outputm1[0];
   	init(subtract_output[1]) := block_subtract.outputm1[1];
   	init(delay_output[0]) := block_delay.outputm1[0];
   	init(delay_output[1]) := block_delay.outputm1[1];
   	init(lyap_output) := block_lyap.outputm1;
   	init(delay_lyap_output) := block_delay_lyap.outputm1;
   	
	next(constantA_output[0][0]) := block_constant_A.outputm1[0][0];
	next(constantA_output[0][1]) := block_constant_A.outputm1[0][1];
	next(constantA_output[1][0]) := block_constant_A.outputm1[1][0];
	next(constantA_output[1][1]) := block_constant_A.outputm1[1][1];
	next(constantB_output[0]) := block_constant_B.outputm1[0];
	next(constantB_output[1]) := block_constant_B.outputm1[1];
	next(constantK_output[0]) := block_constant_K.outputm1[0];
	next(constantK_output[1]) := block_constant_K.outputm1[1];
   	next(product1_output[0]) := block_product1.outputm1[0];
   	next(product1_output[1]) := block_product1.outputm1[1];
   	next(product2_output[0]) := block_product2.outputm1[0];
   	next(product2_output[1]) := block_product2.outputm1[1];
   	next(product3_output) := block_product3.outputm1;
   	next(subtract_output[0]) := block_subtract.outputm1[0];
   	next(subtract_output[1]) := block_subtract.outputm1[1];
   	next(delay_output[0]) := block_delay.outputm1[0];
   	next(delay_output[1]) := block_delay.outputm1[1];
   	next(lyap_output) := block_lyap.outputm1;
   	next(delay_lyap_output) := block_delay_lyap.outputm1;
   	
  LTLSPEC G delay_lyap_output >= lyap_output -- stable


MODULE b_constant_matrix_A
 VAR
 	outputm1 : array 0..1 of array 0..1 of unsigned word[8];
 DEFINE a1 := 0ud8_15; -- 1.5
 DEFINE a2 := 0ud8_5;  -- 0.5
 DEFINE a3 := 0ud8_5;  -- 0.5
 DEFINE a4 := 0ud8_10; -- 1.0

 ASSIGN 
	init(outputm1[0][0]) := a1;
	init(outputm1[0][1]) := a2;
	init(outputm1[1][0]) := a3;
	init(outputm1[1][1]) := a4;
	next(outputm1[0][0]) := a1;
	next(outputm1[0][1]) := a2;
	next(outputm1[1][0]) := a3;
	next(outputm1[1][1]) := a4;
	
MODULE b_constant_matrix_B
 VAR
 	outputm1 : array 0..1 of unsigned word[8];
 DEFINE a1 := 0ud8_20; 
 DEFINE a2 := 0ud8_0;

 ASSIGN 
	init(outputm1[0]) := a1;
	init(outputm1[1]) := a2;
	next(outputm1[0]) := a1;
	next(outputm1[1]) := a2;
	
MODULE b_constant_matrix_K
 VAR
 	outputm1 : array 0..1 of unsigned word[8];
 DEFINE a1 := 0ud8_11; 
 DEFINE a2 := 0ud8_6;

 ASSIGN 
	init(outputm1[0]) := a1;
	init(outputm1[1]) := a2;
	next(outputm1[0]) := a1;
	next(outputm1[1]) := a2;

	
MODULE b_productMV(in1,in2) -- I need 0.5 * number
  VAR
  	outputm1 : array 0..1 of unsigned word[8];
 	
  ASSIGN
   	init(outputm1[0]) := (in2[0]*0ud8_10*in1[0][0])/0ud8_100 + (in2[0]*0ud8_10*in1[0][1])/0ud8_100;
   	init(outputm1[1]) := (in2[1]*0ud8_10*in1[1][0])/0ud8_100 + (in2[1]*0ud8_10*in1[1][1])/0ud8_100;
  	next(outputm1[0]) := (in2[0]*0ud8_10*in1[0][0])/0ud8_100 + (in2[0]*0ud8_10*in1[0][1])/0ud8_100;
  	next(outputm1[1]) := (in2[1]*0ud8_10*in1[1][0])/0ud8_100 + (in2[1]*0ud8_10*in1[1][1])/0ud8_100;


MODULE b_productVN(in1,in2) -- I need 0.5 * number
  VAR
  	outputm1 : array 0..1 of unsigned word[8];
 	
  ASSIGN
   	init(outputm1[0]) := (in2*0ud8_10*in1[0])/0ud8_100;
   	init(outputm1[1]) := (in2*0ud8_10*in1[1])/0ud8_100;
  	next(outputm1[0]) := (in2*0ud8_10*in1[0])/0ud8_100;
  	next(outputm1[1]) := (in2*0ud8_10*in1[1])/0ud8_100;


MODULE b_productVV(in1,in2) -- I need 0.5 * number
  VAR
  	outputm1 : unsigned word[8];
 	
  ASSIGN
   	init(outputm1) := (in2[0]*0ud8_10*in1[0])/0ud8_100 + (in2[1]*0ud8_10*in1[1])/0ud8_100;
  	next(outputm1) := (in2[0]*0ud8_10*in1[0])/0ud8_100 + (in2[1]*0ud8_10*in1[1])/0ud8_100;



MODULE b_delay(in1)
  VAR
  	outputm1 : array 0..1 of unsigned word[8];
  DEFINE initval_1:= 0ud8_10;
  DEFINE initval_2:= 0ud8_10;
  ASSIGN
  	init(outputm1[0]) := initval_1;
  	init(outputm1[1]) := initval_2;
  	next(outputm1[0]) := in1[0];
  	next(outputm1[1]) := in1[1];


MODULE b_subtract(in1,in2) 
  VAR
  	outputm1 : array 0..1 of unsigned word[8];
 	
  ASSIGN
   	init(outputm1[0]) := in1[0] - in2[0]; 
   	init(outputm1[1]) := in1[1] - in2[1]; 
  	next(outputm1[0]) := in1[0] - in2[0]; 
  	next(outputm1[1]) := in1[1] - in2[1]; 

MODULE b_delay2(in1)
  VAR
  	outputm1 : unsigned word[8];
  DEFINE initval:= 0ud8_255;
  ASSIGN
  	init(outputm1) := initval;
  	next(outputm1) := in1;
  	
MODULE b_lyap(in1)
  VAR
  	outputm1 : unsigned word[8];
  DEFINE p1:= 0ud8_23;
  DEFINE p2:= 0ud8_15;
  DEFINE p3:= 0ud8_15;
  DEFINE p4:= 0ud8_41;
  ASSIGN
  	init(outputm1) := (in1[0] * in1[0])/0ud8_10 + (in1[1] * in1[1])/0ud8_10;
  	next(outputm1) := (in1[0] * in1[0])/0ud8_10 + (in1[1] * in1[1])/0ud8_10;
   	
