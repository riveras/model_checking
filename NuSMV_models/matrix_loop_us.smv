MODULE main 
 VAR
	constant_output : array 0..1 of array 0..1 of unsigned word[8]; --matrix A
	product_output: array 0..1 of unsigned word[8];	-- vector x at t+1	
	delay_output: array 0..1 of unsigned word[8];		-- vector x at t
	lyap_output: unsigned word[8];
	delay_lyap_output: unsigned word[8];
	block_constant : b_constant_matrix;
	block_product : b_product(constant_output,delay_output);
	block_delay : b_delay(product_output);
	block_lyap : b_lyap(delay_output);
	block_delay_lyap : b_delay2(lyap_output);

 ASSIGN
	init(constant_output[0][0]) := block_constant.outputm1[0][0];
	init(constant_output[0][1]) := block_constant.outputm1[0][1];
	init(constant_output[1][0]) := block_constant.outputm1[1][0];
	init(constant_output[1][1]) := block_constant.outputm1[1][1];
   	init(product_output[0]) := block_product.outputm1[0];
   	init(product_output[1]) := block_product.outputm1[1];
   	init(delay_output[0]) := block_delay.outputm1[0];
   	init(delay_output[1]) := block_delay.outputm1[1];
   	init(lyap_output) := block_lyap.outputm1;
   	init(delay_lyap_output) := block_delay_lyap.outputm1;
   	next(constant_output[0][0]) := block_constant.outputm1[0][0];
   	next(constant_output[0][1]) := block_constant.outputm1[0][1];
   	next(constant_output[1][0]) := block_constant.outputm1[1][0];
   	next(constant_output[1][1]) := block_constant.outputm1[1][1];
   	next(product_output[0]) := block_product.outputm1[0];
   	next(product_output[1]) := block_product.outputm1[1];
   	next(delay_output[0]) := block_delay.outputm1[0];
   	next(delay_output[1]) := block_delay.outputm1[1];
   	next(lyap_output) := block_lyap.outputm1;
   	next(delay_lyap_output) := block_delay_lyap.outputm1;
 
 LTLSPEC G delay_lyap_output >= lyap_output -- stable
-- LTLSPEC G delay_lyap_output < lyap_output  -- unstable

MODULE b_constant_matrix
 VAR
 	outputm1 : array 0..1 of array 0..1 of unsigned word[8];
 DEFINE a1 := 0ud8_15; -- 0.5
 DEFINE a2 := 0ud8_0;
 DEFINE a3 := 0ud8_0;
 DEFINE a4 := 0ud8_15;

 ASSIGN 
	init(outputm1[0][0]) := a1;
	init(outputm1[0][1]) := a2;
	init(outputm1[1][0]) := a3;
	init(outputm1[1][1]) := a4;
	next(outputm1[0][0]) := a1;
	next(outputm1[0][1]) := a2;
	next(outputm1[1][0]) := a3;
	next(outputm1[1][1]) := a4;

	
MODULE b_product(in1,in2) -- I need 0.5 * number
  VAR
  	outputm1 : array 0..1 of unsigned word[8];
 	
  ASSIGN
   	init(outputm1[0]) := (in2[0]* in1[0][0])/0ud8_10 + (in2[1]* in1[0][1])/0ud8_10;
   	init(outputm1[1]) := (in2[0]* in1[1][0])/0ud8_10 + (in2[1]* in1[1][1])/0ud8_10;
  	next(outputm1[0]) := (in2[0]* in1[0][0])/0ud8_10 + (in2[1]* in1[0][1])/0ud8_10;
  	next(outputm1[1]) := (in2[0]* in1[1][0])/0ud8_10 + (in2[1]* in1[1][1])/0ud8_10;


MODULE b_delay(in1)
  VAR
  	outputm1 : array 0..1 of unsigned word[8];
  DEFINE initval_1:= 0ud8_10;
  DEFINE initval_2:= 0ud8_10;
  ASSIGN
  	init(outputm1[0]) := initval_1;
  	init(outputm1[1]) := initval_2;
  	next(outputm1[0]) := in1[0];
  	next(outputm1[1]) := in1[1];


MODULE b_delay2(in1)
  VAR
  	outputm1 : unsigned word[8];
  DEFINE initval:= 0ud8_255;
  ASSIGN
  	init(outputm1) := initval;
  	next(outputm1) := in1;
  	
MODULE b_lyap(in1)
  VAR
  	outputm1 : unsigned word[8];
  ASSIGN
  	init(outputm1) := (in1[0] * in1[0])/0ud8_10 + (in1[1] * in1[1])/0ud8_10;
  	next(outputm1) := (in1[0] * in1[0])/0ud8_10 + (in1[1] * in1[1])/0ud8_10;
   	
